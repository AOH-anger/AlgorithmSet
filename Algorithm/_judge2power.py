#coding=utf-8
'''
题目：实现一个方法，判断一个正整数是否是2的乘方（比如16是2的4次方，返回True；18不是2的乘方，返回False）。要求性能尽可能高。
解法一: 创建一个中间变量Temp，初始值是1。然后进入一个循环，循环中每次让Temp和目标整数比较,判断是否相等
解法二: 2的乘方都符合一个规律，即 N&N-1 等于 0，所以直接用这个规律判断即可。该算法时间复杂度是O（1）。
'''

# =========================================== 解法一 ==============================================

# def method_one():
#     digit = input('请输入数字:')
#     data = int(digit)
#     temp = 1
#     while temp <= data:
#         if temp == data:
#             print (True)
#         temp *= 2                     #此处可以优化: 将 乘 改为向左位移  <<
#     print (False)
#
# method_one()

#============================================ 解法二 √ ==============================================

def Demo():
    date = input('请输入数字:')
    math = int(date)
    print ((math & math-1) == 0)

Demo()
